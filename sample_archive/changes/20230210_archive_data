-- ----------------------------------------
-- table sample_table_name
-- ----------------------------------------


create table if not exists archive.sample_table_name (like public.sample_table_name);

-- prescript
--create temporary table t_sample_table_name as 
--      select b.id from sample_table_name b
--      left join sample_table_name2 c on c.outgoing_sample_table_name_id = b.id
--      left join sample_table_name3 d on d.message_id = b.id
--      left join sample_table_name4 e on e.message_id = b.id
--      where b.created_on < '2020-03-01'
--        and (c.updated_at < '2020-03-01' or c.updated_at is null)        and (d.updated_at < '2020-03-01' or d.updated_at is null)        and (e.updated_at < '2020-03-01' or e.updated_at is null)
--;
-- SELECT 21661122
-- Time: 281018.219 ms (04:41.018)

--with rows as (
--  delete from public.sample_table_name a
--    where a.id in (
--      select b.id from t_sample_table_name b 
--    )
--  returning a.*
--)
--insert into archive.sample_table_name select * from rows;
-- INSERT 0 21661122
-- Time: 11919777.956 ms (03:18:39.778)

-- postscript
--DROP table t_sample_table_name;


-- restore records to test other method
--with rows as (
--  delete from archive.sample_table_name a
--  returning a.*)
--insert into public.sample_table_name select * from rows;
-- Estimated based on script query: 12:17:15.591989


-- original attempt
with rows as (
  delete from public.sample_table_name a
    where a.id in (
      select b.id from sample_table_name b 
      left join sample_table_name2 c on c.outgoing_sample_table_name_id = b.id
      left join sample_table_name3 d on d.message_id = b.id
      left join sample_table_name4 e on e.message_id = b.id    
      where b.created_on < '2020-03-01'
        and (c.updated_at < '2020-03-01' or c.updated_at is null)
	and (d.updated_at < '2020-03-01' or d.updated_at is null)
	and (e.updated_at < '2020-03-01' or e.updated_at is null)
    )
  returning a.*
)
insert into archive.sample_table_name select * from rows;


vacuum sample_table_name;
analyze sample_table_name;
